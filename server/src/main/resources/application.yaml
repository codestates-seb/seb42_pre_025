spring:
  profiles:
    active: postgres
---
spring:
  profiles: postgres
  datasource:
    url: jdbc:postgresql://${LOCAL_DATABASE_URL}:5432/${LOCAL_DATABASE_NAME}
    password: ${POSTGRESQL_PASSWORD}
    username: ${POSTGRESQL_USERNAME}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        highlight_sql: true
#        format_sql: true
        show_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  output:
    ansi:
      enabled: always
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - user:profile
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://dev.qushe8r.shop/login/oauth2/code/google
            scope:
              - email
              - profile
server:
  servlet:
    session:
      cookie:
        same-site: none
        secure: true
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: TRACE
      springframework:
        orm:
          jpa: DEBUG
mail:
  smtp:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    auth: true
    starttls:
      enable: true
  subject:
    user:
      registration: Thank you for registration!
  template:
    name:
      user:
        join: email-registration-member
jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 40
  refresh-token-expiration-minutes: 420
---
spring:
  profiles: h2
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  output:
    ansi:
      enabled: always
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - email
              - profile
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
server:
  servlet:
    session:
      cookie:
        same-site: none
        secure: true
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: TRACE
      springframework:
        orm:
          jpa: DEBUG
mail:
  smtp:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    auth: true
    starttls:
      enable: true
  subject:
    user:
      registration: Thank you for registration!
  template:
    name:
      user:
        join: email-registration-member